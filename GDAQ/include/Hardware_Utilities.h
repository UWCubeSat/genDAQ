///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Pre-Processor & Forward Declarations
///////////////////////////////////////////////////////////////////////////////////////////////////

#include "Arduino.h"
#include "Wire.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Computer Communication (singleton)
///////////////////////////////////////////////////////////////////////////////////////////////////

Serial_ *COMPUTERCOM_BUS = &Serial;
const int32_t COMPUTERCOM_BAUDRATE = 250000;
const int16_t COMPUTERCOM_BUFFER_SIZE = 256;
const int16_t COMPUTERCOM_TIMEOUT_DEFAULT = 1000;
const int16_t COMPUTERCOM_TIMEOUT_MAX = 10000;
const int16_t COMPUTERCOM_TIMEOUT_MIN = 100;

class ComputerCom_ {
  private:
    int16_t timeout;

  public:
    bool init();

    bool send(int8_t*, int16_t);

    bool receive(int8_t*, int16_t);


  private:
    ComputerCom_() {};

};
extern ComputerCom_ &ComputerCom;

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Serial Bus
///////////////////////////////////////////////////////////////////////////////////////////////////

class SerialBus {

};

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> I2C Bus
///////////////////////////////////////////////////////////////////////////////////////////////////

class I2CBus {

};

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> SPI Bus
///////////////////////////////////////////////////////////////////////////////////////////////////

class SPIBus {

};

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Digital Pin
///////////////////////////////////////////////////////////////////////////////////////////////////

class DigitalPin {

};

///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Analog Pin
///////////////////////////////////////////////////////////////////////////////////////////////////

class AnalogPin {

};