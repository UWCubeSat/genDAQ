///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Pre-Processor & Forward Declarations
///////////////////////////////////////////////////////////////////////////////////////////////////

#include "Global_Utilities.h"


///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Request Object
///////////////////////////////////////////////////////////////////////////////////////////////////

Request::Request(REQ_TYPE type, uint8_t id, handlerFunc handler, int16_t params[4]) {
  this->type = type;
  this->id = id;
  this->handler = handler;
  memcpy(this->params, params, REQ_PARAM_ARRAY_BYTES);
}

void Request::clear() {
  this->type = REQ_NULL;
  this->id = -1; 
  this->handler = nullptr;
  memset(this->params, 0, REQ_PARAM_ARRAY_BYTES);
}


///////////////////////////////////////////////////////////////////////////////////////////////////
//// SECTION -> Error Object
///////////////////////////////////////////////////////////////////////////////////////////////////

Error::Error(ERROR_TYPE type, char *funcName) {
  update(type, funcName);
}

void Error::update(ERROR_TYPE type, char *funcName) {
  if (type != ERROR_NONE && funcName != nullptr) {
    this->isError = true;
    this->type = type;
    this->funcName = funcName;
  }
}

